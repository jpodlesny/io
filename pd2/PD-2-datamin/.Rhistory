typeof(hepatitis.knn)
hepatitis.knn
hepatitis.knn <- knn(hepatitis.training[,c(2,4:20)], hepatitis.test[,c(2,4:20)], cl=hepatitis.training[,1], k=3, prob=FALSE)
conf.matrix.knn <- table(predicted.knn,real.knn)
predicted.bayes
predicted.knn <- knn(hepatitis.training[,c(2,4:20)], hepatitis.test[,c(2,4:20)], cl=hepatitis.training[,1], k=3, prob=FALSE)
conf.matrix.knn <- table(predicted.knn,real.knn)
accuracy.knn <- sum(diag(conf.matrix.knn))/sum(conf.matrix.knn)
accuracy.knn
conf.matrix.knn
table(hepatitis.knn, hepatitis.test[,1])
(table(hepatitis.knn, hepatitis.test[,1])[1,1] + table(hepatitis.knn, hepatitis.test[,1])[2,2]) / length(hepatitis.test[,1]) * 100
hepatitis.test[,1]
hepatitis.test[,1][1,1]
table(hepatitis.knn, hepatitis.test[,1])[1,1]
colors = c("red", "green", "blue", "brown")
barplotData <- c(accuracy.bayes,accuracy.knn,accuracy.ksvm,accuracy.tree)
barplot(barplotData, names.arg = c("bayes","knn","ksvm","tree"),
xlab = "Classifier", ylab = "Accuracy (%)", col = colors, main = "Classification accuracy", ylim = c(0,100))
axis(2, seq(0, 100, by = 5))
barplotData <- c(accuracy.bayes*100,accuracy.knn*100,accuracy.ksvm*100,accuracy.tree*100)
barplot(barplotData, names.arg = c("bayes","knn","ksvm","tree"),
xlab = "Classifier", ylab = "Accuracy (%)", col = colors, main = "Classification accuracy", ylim = c(0,100))
axis(2, seq(0, 100, by = 5))
knnPos <- c(table(hepatitis.knn, hepatitis.test[,1])[2,1]/(table(hepatitis.knn, hepatitis.test[,1])[2,1]+table(hepatitis.knn, hepatitis.test[,1])[1,1]),
table(hepatitis.knn, hepatitis.test[,1])[2,2]/(table(hepatitis.knn, hepatitis.test[,1])[2,2]+table(hepatitis.knn, hepatitis.test[,1])[1,2]))
bayesPos <- c(table(predicted.bayes, hepatitis.test[,1])[2,1]/(table(predicted.bayes, hepatitis.test[,1])[2,1]+table(predicted.bayes, hepatitis.test[,1])[1,1]),
table(predicted.bayes, hepatitis.test[,1])[2,2]/(table(predicted.bayes, hepatitis.test[,1])[2,2]+table(predicted.bayes, hepatitis.test[,1])[1,2]))
treePos <- c(table(predicted.tree, hepatitis.test[,1])[2,1]/(table(predicted.tree, hepatitis.test[,1])[2,1]+table(predicted.tree, hepatitis.test[,1])[1,1]),
table(predicted.tree, hepatitis.test[,1])[2,2]/(table(predicted.tree, hepatitis.test[,1])[2,2]+table(predicted.tree, hepatitis.test[,1])[1,2]))
ksvmPos <- c(table(predicted.ksvm, hepatitis.test[,1])[2,1]/(table(predicted.ksvm, hepatitis.test[,1])[2,1]+table(predicted.ksvm, hepatitis.test[,1])[1,1]),
table(predicted.ksvm, hepatitis.test[,1])[2,2]/(table(predicted.ksvm, hepatitis.test[,1])[2,2]+table(predicted.ksvm, hepatitis.test[,1])[1,2]))
posList <- c(knnPos, bayesPos, treePos, ksvmPos)
plotData <- matrix(posList, nrow=6, ncol=2, byrow = TRUE)
plotData <- matrix(posList, nrow=4, ncol=2, byrow = TRUE)
plotData
plot(-1,-1, xlim = c(0,1), ylim = c(0,1), xlab = "FP-rate", ylab = "TP-rate")
for (i in 1:nrow(plotData)) {
points(plotData[i,1], plotData[i,2], col = colors[i], pch = 16)
}
hepatitis.log <- log(hepatitis.clear[,c(2,4:14,20)])
hepatitis.log  <- do.call(data.frame, lapply(hepatitis.log, function(x) {
replace(x, is.infinite(x) | is.na(x), -1)
}))
hepatitis.log.scale <- scale(hepatitis.log)
hepatitis.pca <- prcomp(hepatitis.log.scale)
hepatitis.pca$x
new.dat <- data.frame("PC1" = hepatitis.pca$x[,1], "PC2" = hepatitis.pca$x[,2])
cl2 <- kmeans(new.dat, 2)
plot(new.dat, col = cl2$cluster)
points(cl2$centers, col = 1:2, pch = 8, cex = 2)
cl3 <- kmeans(new.dat, 3)
plot(new.dat, col = cl3$cluster)
points(cl3$centers, col = 1:3, pch = 8, cex = 3)
cl4 <- kmeans(new.dat, 4)
plot(new.dat, col = cl4$cluster)
points(cl4$centers, col = 1:4, pch = 8, cex = 4)
library(arules)
test <- hepatitis.clear
hepatitis.clear[,2] <- as.factor(hepatitis.clear[,2])
View(hepatitis.clear)
View(hepatitis.clear)
hepatitis.clear[,c(4:14,20)] <- as.logical(hepatitis.clear[,c(4:14,20)])
hepatitis.clear[,4:14)] <- as.logical(hepatitis.clear[,4:14])
hepatitis.clear[,4:14] <- as.logical(hepatitis.clear[,4:14])
hepatitis.clear[,5][hepatitis.clear[,5] == 1] <- 0
hepatitis.clear[,5][hepatitis.clear[,5] == 2] <- 1
View(hepatitis.clear)
View(hepatitis.clear)
for (i in 4:14) {
hepatitis.clear[, i] <- as.logical(hepatitis.clear[,i])
}
hepatitis.clear[, 20] <- as.logical(hepatitis.clear[,20])
View(hepatitis.clear)
View(hepatitis.clear)
rules <- apriori(hepatitis.clear, parameter=list(maxlen=15, supp=0.007, conf=0.8))
save.image("C:/JULEK/Informatyka/Rstudio - projekty/PD-2-datamin/session.RData")
library(arules)
rules <- apriori(titanic.raw)
rules <- apriori(hepatitis.clear)
rules
install.packages("arules")
install.packages("arules")
install.packages("arules")
library(arules)
rules <- apriori(hepatitis.clear)
library(arules)
rules <- apriori(hepatitis.clear,
+ parameter = list(minlen=2,maxlen=4 supp=0.2, conf=0.8),
+ appearance = list(rhs=c("Class=live", "Class=die"),
+ default="lhs"),
+ control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=4 supp=0.2, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=4, supp=0.2, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=4, supp=0.1, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=4, supp=0.0.9, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=4, supp=0.09, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=4, supp=0.08, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=4, supp=0.009, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
5
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=4, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=4, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=4, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live"),
default="lhs"))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=5, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live"),
default="lhs"))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,maxlen=5, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live"))
)
rules <- apriori(hepatitis.clear)
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"))
plot(-1,-1, xlim = c(0,1), ylim = c(0,1), xlab = "FP-rate", ylab = "TP-rate")
for (i in 1:nrow(plotData)) {
points(plotData[i,1], plotData[i,2], col = colors[i], pch = 16)
}
legend("right","top", legend = c("bayes","knn","ksvm","tree"), cex=.75, col = colors, pch = 16, lty = 0)
cl2
cl2$cluster
new.dat
cltest <- kmeans(hepatitis.clear, 2)
setdiff(cl2$cluster, cl3$cluster)
setdiff(cl2$cluster, cl4$cluster)
setdiff(cl3$cluster, cl4$cluster)
intersect(cl2$cluster, cl3$cluster)
cl2$cluster %in% cl3%cluster
cl2$cluster %in% cl3$cluster
cl2$cluster %in% cl4$cluster
cl3$cluster %in% cl4$cluster
aa <- hepatitis.clear$Class
aa
remove(aa)
aa <- data.frame(hepatitis.clear$Class)
View(aa)
View(aa)
aa <- data.frame(hepatitis.clear %in% hepatitis.clear$Class="live")
aa <- data.frame(hepatitis.clear$Class="live")
aa <- df(hepatitis.clear$Class="live")
aa <- hepatitis.clear(hepatitis.clear$Class="live")
aa <- hepatitis.clear(hepatitis.clear$Class=="live")
aa <- hepatitis.clear[which(hepatitis.clear$Class == "live")]
View(aa)
View(aa)
remove(aa)
aa <- hepatitis.clear[which(hepatitis.clear$Class == "live")]
head(hepatitis.clear)
aa <- data.frame(hepatitis.clear$Class == "live")
View(aa)
View(aa)
remove(aa)
aa <- data.frame(hepatitis.clear[grep("live", hepatitis.clear$Class)])
hepatitis.clear[hepatitis.clear$AGE>60]
hepatitis.clear[hepatitis.clear$AGE>"60"]
View(test)
View(test)
test[test$AGE>60]
aa <- cbind(hepatitis.clear, Class = hepatitis.clear["Class"])
aa
View(aa)
View(aa)
View(aa)
remove(11)
remove(aa)
aa <- test[ which(test$Class=='live' ]
aa <- test[ which(test$Class=='live') ]
aa <- test[ which(test[,1]=='live') ]
aa <- test[ which(test[,1]=='live'), ]
View(aa)
View(aa)
remove(aa)
testLive <- test[ which(test[,1]=='live'), ]
testDie <- test[ which(test[,1]=='die'), ]
View(testDie)
View(testDie)
test.hepatitis.log.live <- log(testLive[,c(2,4:14,20)])
test.hepatitis.log.live  <- do.call(data.frame, lapply(test.hepatitis.log.live, function(x) {
replace(x, is.infinite(x) | is.na(x), -1)
}))
test.hepatitis.log.scale <- scale(test.hepatitis.log.live)
test.hepatitis.pca <- prcomp(test.hepatitis.log.scale)
test.new.dat <- data.frame("PC1" = test.hepatitis.pca$x[,1], "PC2" = test.hepatitis.pca$x[,2])
plot(test.new.dat)
plot(test.hepatitis.pca)
plot(test.new.dat)
remove(testLive)
remove(testDie)
remove(test.hepatitis.log.live)
remove(test.hepatitis.log.scale)
remove(test.hepatitis.pca)
remove(test.new.dat)
aa <- test[,c(1,2,3)]
aa
rules <- apriori(aa,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
View(aa)
View(aa)
aa$AGE <- as.factor(aa$AGE)
View(aa)
View(aa)
rules <- apriori(aa,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rules <- apriori(aa)
rules <- apriori(aa, parameter = list(supp = 0.15, conf = 0.80))
rules
library(arulesViz)
library(arules)
install.packages("arulesViz")
library(arulesViz)
aa <- data.frame(sapply(aa,as.factor))
View(aa)
View(aa)
aa <- as(aa, "transactions")
View(aa)
View(aa)
rules <- apriori(aa, parameter = list(supp = 0.15, conf = 0.80))
rules <- apriori(data, parameter = list(supp = 0.005, conf = 0.80))
rules <- apriori(data, parameter = list(supp = 0.005, conf = 0.80))
rules <- apriori(aa, parameter = list(supp = 0.005, conf = 0.80))
rules <- apriori(aa, parameter = list(supp = 0.05, conf = 0.80))
rules <- apriori(aa, parameter = list(supp = 0.004, conf = 0.80))
rules <- apriori(aa)
install.packages("arules")
install.packages("arules")
install.packages("arules")
install.packages("arules")
install.packages("arules")
remove.packages("arules")
install.packages("arules")
install.packages("arules")
library("arules")
rules <- apriori(aa)
View(rules)
View(rules)
inspect(rules)
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2, maxlen=4,supp=0.005, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
head(inspect(rules))
rules <- apriori(hepatitis.clear,
parameter = list(minlen=2,supp=0.1, conf=0.8),
appearance = list(rhs=c("Class=live", "Class=die"),
default="lhs"),
control = list(verbose=F))
rulses.sorted <- sort(rules, by="lift")
View(rulses.sorted)
View(rulses.sorted)
head(inspect(rules))
subset.matrix <- is.subset(rulses.sorted, rulses.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- FALSE
redundant <- colSums(subset.matrix, na.rm=T) >= 1
rules.pruned <- rulses.sorted[!redundant]
head(inspect(rules.pruned))
write(rules.pruned, file = "data",
ncolumns = if(is.character(x)) 1 else 5,
append = FALSE, sep = " ")
write.table(rules.pruned, "wyniki", append = FALSE, sep = " ", dec = ".",
row.names = TRUE, col.names = TRUE)
write.table(rules.pruned, file="wyniki", append = FALSE, sep = " ", dec = ".",
row.names = TRUE, col.names = TRUE)
write.csv(rules.pruned, file="wyniki")
inspect(rules.pruned)
rules2 <- apriori(hepatitis.clear, parameter = list(minlen = 2, supp=0.1, conf=0.8), appearance = list(rhs=c(“Class=die”), default=”lhs”), control=list(verbose=F))
rules2 <- apriori(hepatitis.clear, parameter = list(minlen = 2, supp=0.1, conf=0.8), appearance = list(rhs=“Class=die”, default=”lhs”), control=list(verbose=F))
rules2 <- apriori(hepatitis.clear, parameter = list(minlen = 2, supp=0.1, conf=0.8), appearance = list(rhs=c(“Class=live”, “Class=die”), default=”lhs”), control=list(verbose=F))
rules2 <- apriori(hepatitis.clear, parameter = list(minlen = 2, supp=0.1, conf=0.8), appearance = list(rhs=c(“Class=live”, “Class=die”), default=”lhs”), control=list(verbose=F))
rules2 <- apriori(test, parameter = list(minlen = 2, supp=0.1, conf=0.8), appearance = list(rhs=c(“Class=live”, “Class=die”), default=”lhs”), control=list(verbose=F))
rules2 <- apriori(titanic.raw,
parameter = list(minlen=2, supp=0.1, conf=0.8),
appearance = list(rhs="Survived=No"),
default="lhs"),
control = list(verbose=F))
rules2 <- apriori(titanic.raw,
parameter = list(minlen=2, supp=0.1, conf=0.8),
appearance = list(rhs=c("Survived=No")),
default="lhs"),
control = list(verbose=F))
rules2 <- apriori(hepatitis.clear,
parameter = list(minlen=2, supp=0.1, conf=0.8),
appearance = list(rhs=c("Survived=No"),
default="lhs"),
control = list(verbose=F))
rules2 <- apriori(hepatitis.clear,
parameter = list(minlen=2, supp=0.1, conf=0.8),
appearance = list(rhs=c("Class=die"),
default="lhs"),
control = list(verbose=F))
rules.sorted2 <- sort(rules2, by=”lift”)
subset.matrix2 <- is.subset(rules.sorted2, rules.sorted2)
subset.matrix2[lower.tri(subset.matrix2, diag=T)] <- FALSE
redundant2 <- colSums(subset.matrix2, na.rm) >= 1
rules.pruned2 <- rules.sorted2[!redundant]
rules.sorted2 <-sort(rules2, by="lift")
subset.matrix2 <- is.subset(rules.sorted2, rules.sorted2)
subset.matrix2[lower.tri(subset.matrix2, diag=T)] <- FALSE
redundant2 <- colSums(subset.matrix2, na.rm) >= 1
rules.pruned2 <- rules.sorted2[!redundant]
subset.matrix2
subset.matrix
subset.matrix2 <- is.subset(rules.sorted2, rules.sorted2)
rules.sorted
rules.sorted <- sort(rules, by="lift")
rules.sorted
rules.sorted2
rules2 <- apriori(hepatitis.clear,
parameter = list(minlen=2, supp=0.1, conf=0.8),
appearance = list(rhs="Class=die",
default="lhs"),
control = list(verbose=F))
rules.sorted2 <- sort(rules, by="lift")
rules.sorted2
rules.sorted
subset.ma
subset.matrix2
subset.matrix2 <- is.subset(rules.sorted2, rules.sorted2)
subset.matrix2[lower.tri(subset.matrix2, diag = T)] <-FALSE
redundant2 <- colSums(subset.matrix2, na.rm=T) >= 1
rules.pruned2 <- rules.sorted2[!redundant2]
rules.pruned2
inspect(rules.pruned2)
remove(rules.pruned2)
remove(rules.sorted2)
remove(subset.matrix2)
remove(rules2)
remove(redundant2)
aa <- hepatitis.clear[which(hepatitis.clear$ANTIVIRALS == TRUE, hepatitis.clear$ANOREXIA == TRUE, hepatitis.clear$LIVER.BIG == TRUE, hepatitis.clear$ASCITES == TRUE, hepatitis.clear$VARICES == TRUE)]
aa <- hepatitis.clear[hepatitis.clear$ANTIVIRALS == TRUE, hepatitis.clear$ANOREXIA == TRUE, hepatitis.clear$LIVER.BIG == TRUE, hepatitis.clear$ASCITES == TRUE, hepatitis.clear$VARICES == TRUE,]
aa <- hepatitis.clear[hepatitis.clear$ANTIVIRALS == T, hepatitis.clear$ANOREXIA == T, hepatitis.clear$LIVER.BIG == T, hepatitis.clear$ASCITES == T, hepatitis.clear$VARICES == T,]
aa <- hepatitis.clear[hepatitis.clear$ANTIVIRALS = TRUE, hepatitis.clear$ANOREXIA == T, hepatitis.clear$LIVER.BIG == T, hepatitis.clear$ASCITES == T, hepatitis.clear$VARICES == T,]
aa <- test[test$ANTIVIRALS == 1, test$ANOREXIA == 1, test$LIVER.BIG == 1, test$ASCITES == 1, test$VARICES == 1,]
aa <- test[test$ANTIVIRALS = 1, test$ANOREXIA = 1, test$LIVER.BIG = 1, test$ASCITES = 1, test$VARICES = 1,]
rowSums(hepatitis.clear[hepatitis.clear$SEX == "female"])
rowSums(hepatitis.clear[hepatitis.clear$SEX == "female",])
hepatitis.clear[hepatitis.clear$SEX == "female",]
nrow(hepatitis.clear[hepatitis.clear$SEX == "female",])
nrow(hepatitis.clear[hepatitis.clear$ANTIVIRALS == 1, hepatitis.clear$ANOREXIA == 1, hepatitis.clear$LIVER.BIG == 1, hepatitis.clear$ASCITES == 1, hepatitis.clear$VARICES == 1,])
nrow(test[test$ANTIVIRALS == 2, test$ANOREXIA == 1, test$LIVER.BIG == 1, test$ASCITES == 1, test$VARICES == 1,])
nrow(test[c(test$ANTIVIRALS == 2, test$ANOREXIA == 1, test$LIVER.BIG == 1, test$ASCITES == 1, test$VARICES == 1),])
nrow(test[c(test$ANTIVIRALS == 2 && test$ANOREXIA == 1, test$LIVER.BIG == 1, test$ASCITES == 1, test$VARICES == 1),])
nrow(test[c(test$ANTIVIRALS == 2 && test$ANOREXIA == 1, test$LIVER.BIG == 1 && test$ASCITES == 1, test$VARICES == 1),])
nrow(test[c(test$ANTIVIRALS == 2 && test$ANOREXIA == 1 && test$LIVER.BIG == 1 && test$ASCITES == 1 && test$VARICES == 1),])
nrow(test[c(test$ANTIVIRALS == 1 && test$ANOREXIA == 0 && test$LIVER.BIG == 0 && test$ASCITES == 0 && test$VARICES == 0),])
nrow(test[c(test$ANTIVIRALS == 1 , test$ANOREXIA == 0 && test$LIVER.BIG == 0 && test$ASCITES == 0 && test$VARICES == 0),])
nrow(test[c(test$SEX == "male" && test$Class == "live"),])
nrow(test[c(test$SEX == "male", test$Class == "live"),])
NROW(test[c(test$SEX == "male", test$Class == "live"),])
nrow(test[test$SEX == "male", test$Class == "live",])
nrow(test[test$SEX == "male",])
nrow(test[test$SEX == "woman",])
nrow(test[test$SEX == "female",])
male <- test[test$SEX == "male"]
male <- test[test$SEX == "male",]
male
View(male)
View(male)
female <- test[test$SEX == "female",]
maleLive <- male[male$Class == "live"]
maleLive <- male[male$Class == "live",]
maleDie <- male[male$Class == "die",]
View(maleDie)
View(maleDie)
femaleLive <- female[female$Class == "live",]
femaleDie <- female[female$Class == "die",]
View(femaleLive)
View(femaleLive)
pie(c(nrow(male), nrow(female)))
colors2 <- c("green","red")
maleFemale <- c(nrow(male), nrow(female))
pct <- round(maleFemale/sum(maleFemale)*100)
pct
lbls <- c("male","female")
lbls <- paste(lbls, pct)
lbls <- paste(lbls,"%",sep="")
pie(maleFemale,labels = lbls, col=rainbow(length(lbls)),
main="Ilość kobiet i mężczyzn")
maleFemale <- c(nrow(maleLive), nrow(maleDie))
pct <- round(maleFemale/sum(maleFemale)*100)
lbls <- c("live","die")
lbls <- paste(lbls, pct)
lbls <- paste(lbls,"%",sep="")
pie(maleFemale,labels = lbls, col=rainbow(length(lbls)),
main="Umieralność mężczyzn")
maleFemale <- c(nrow(femaleLive), nrow(femaleDie))
pct <- round(maleFemale/sum(maleFemale)*100)
lbls <- c("live","die")
lbls <- paste(lbls, pct)
lbls <- paste(lbls,"%",sep="")
pie(maleFemale,labels = lbls, col=rainbow(length(lbls)),
main="Umieralność kobiet")
new.dat
aa <- new.dat[new.dat$PC1<-2,]
aa
aa <- new.dat[new.dat$PC1<(-2),]
aa
aa <- new.dat[new.dat$PC1<0,]
aa
aa <- new.dat[new.dat$PC1]
aa
View(aa)
View(aa)
aa <- new.dat[new.dat$PC1 < -2,]
aa
View(new.dat)
View(new.dat)
new.dat <- data.frame("PC1" = hepatitis.pca$x[,1], "PC2" = hepatitis.pca$x[,2])
aa <- (new.dat$PC1<(-2))
aa
aa <- new.dat[new.dat$PC1<(-2),]
View(aa)
View(aa)
bb <- aa[aa$PC2>(0),]
View(bb)
View(bb)
cc <- hepatitis.clear[hepatitis.clear[c(5,6,8,10,23,24,42,43,45,52,53,61,62),]]
cc <- hepatitis.clear[c(5,6,8,10,23,24,42,43,45,52,53,61,62),]
View(cc)
View(cc)
aa <- new.dat[new.dat$PC1>(4),]
bb <- aa[aa$PC2>(0),]
bb
aa <- new.dat[new.dat$PC2<(-3),]
aa
aa <- new.dat[new.dat$PC1>(1.5) && new.dat$PC1<(2),]
aa
aa <- new.dat[new.dat$PC1>(1.5),]
aa <- new.dat[(1.5)<new.dat$PC1<(2),]
aa <- new.dat[new.dat$PC1>(1.5),]
aa <- new.dat[new.dat$PC1<(2),]
aa <- new.dat[new.dat$PC1>(1.5),]
aa <- aa[aa$PC1<(2),]
bb <- aa[aa$PC2>(0.99)]
bb <- aa[aa$PC2>(0.99),]
bb
cc <- hepatitis.clear[c(63,87,107,1142,154,155),]
View(cc)
View(cc)
cc <- hepatitis.clear[c(63,87,107,142,154,155),]
View(cc)
View(cc)
aa <- hepatitis.clear[,c(4:14)==FALSE]
View(aa)
View(aa)
aa <- hepatitis.clear[,c(4:14)]
View(aa)
View(aa)
aa <- hepatitis.clear[FALSE,c(4:14)]
View(aa)
View(aa)
